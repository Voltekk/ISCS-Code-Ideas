use strict;
use warnings;
use utf8;
use LWP::Simple qw/get/;
use HTML::TreeBuilder;
use HTML::FormatText;

check_for_chrome_in_directory();

my $microsoft_format = "http://www.microsoft.com/security/portal/threat/encyclopedia/search.aspx?query=";
#use of https prevents LWP::Simple from extracting info;

my $link = query("What would you like to search for?");

my $malware_information = get_url_data($link);

$malware_information = clean_microsoft($malware_information);

my $pages = page_gets($malware_information);

if($pages !~ /\b0\b|\b1\b/){
	for(my $i = 2; $i < $pages + 1; $i++){
	    my $microsoft_format_pages = $link."%3&showall=False&sortby=relevance&sortdir=desc&size=10&page=".$i;
	    my $information = get_url_data($microsoft_format_pages);
	    $information = clean_microsoft($information);
	    $malware_information = $malware_information."\n".$information;
	    undef $information;
	}
	$malware_information =~ s/\*\s+(Previous|Next)//g;
	$malware_information =~ s/\n+/~/g;
	$malware_information =~ tr{~~}{\n};
	my $file_create = make_file($malware_information, $link);
	print "\nLarge dataset, file created. $file_create\n";
	system($file_create);
}
else{
	print $malware_information;
}

while(){
	query_of_interest("\nEnter the name of the malware to research:\t");
}

exit();

###################################################################################################################

sub query{
	my $question = shift;
	print "\n".$question.":\t";
	my $query_malware = <STDIN>;
	chomp $query_malware;
	#$query_malware
	my $url = $microsoft_format.$query_malware;
	return $url;
	undef $query_malware;
}

sub get_url_data{
    use LWP::Simple qw/get/;
    my $address = shift;
    my $url_data = get($address);
    my $format_url = HTML::FormatText->new();
    my $treebuild = HTML::TreeBuilder->new();
    my $parse = $treebuild->parse($url_data);
    $parse = $format_url->format($parse);
    return $parse;
}

sub clean_microsoft{
    my $data_to_clean = shift;
    my @relevant_info;
    @relevant_info = split /Search the malware encyclopedia/, $data_to_clean;
    $relevant_info[0]="";
    my $data_to_clean_2 = $relevant_info[1];
    @relevant_info = ();
    @relevant_info = split /Didn't find what you were looking for\?/, $data_to_clean_2;
    $relevant_info[0] =~ s/=+//g;
    $relevant_info[0] =~ s/\*\s+[0-9]+//g;
    return $relevant_info[0];
}

sub page_gets{
    my $total_page_string = shift;
    my @get_info;
    @get_info = split /Page 1 of /, $total_page_string;
    my $continue_to_clean = $get_info[1];
    @get_info = ();
    @get_info = split /\n/, $continue_to_clean;
    my $total_pages = $get_info[0];
    $total_pages =~ s/\s+//g;
    return $total_pages;
}

sub make_file{
	my $query_information = shift;
	my $name_of_query = shift;
	$name_of_query =~ s/\Q$microsoft_format//;
	$name_of_query =~ s/\//_/g;
	$name_of_query =~ s/\./_/g;
	$name_of_query =~ s/://g;
	my $file = "C:/Perl/".$name_of_query."_information.txt";
	open(FILE, ">", $file);
	print FILE $query_information;
	close FILE;
	return $file;
}

sub query_of_interest{
	my $question = shift;
	print $question;
	my $name_to_research = <STDIN>;
	chomp $name_to_research;
	if($name_to_research =~ /exit/i){
		last;
	}
	$name_to_research =~ s/\//%2f/g;
	$name_to_research =~ s/:/%3a/g;
	my $microsoft_entry_format_summary = "http://www.microsoft.com/security/portal/threat/encyclopedia/Entry.aspx?Name=".$name_to_research."#tab=1";
	my $microsoft_entry_format_technical_info = "http://www.microsoft.com/security/portal/threat/encyclopedia/Entry.aspx?Name=".$name_to_research."#tab=2";
	system("chrome.lnk ".$microsoft_entry_format_summary);
	system("chrome.lnk ".$microsoft_entry_format_technical_info);
}

sub check_for_chrome_in_directory{
	if(-e "chrome.lnk" || "Google Chrome.lnk"){
		print "Initial check pass.\n";
	}
	else{
		print "Place your google chrome into current directory.";
		system('pause');
		exit();
	}
}
